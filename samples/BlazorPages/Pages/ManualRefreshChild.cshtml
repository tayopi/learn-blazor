@using System.Threading;
@using System.Collections.Generic

<p>Child: @CurrentValue</p>

<hr />
<p>You requested @NumberOfElements elements. Here they are:</p>
<ul>
    @foreach (var n in Numbers)
    {
        <li>@n</li>
    }
</ul>

@functions {
    private int CurrentValue { get; set; }

    [Parameter]
    private int NumberOfElements { get; set; }

    private IEnumerable<int> Numbers
    {
        get
        {
            for (var i = 0; i < NumberOfElements; i++)
            {
                yield return i;
            }
        }
    }

    protected override void OnInit()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            CurrentValue++;

            // Note that we have to manually refresh the UI although
            // our parent component calls `StateHasChanged`, too. The
            // parent's call does not auto-refresh its children.
            StateHasChanged();
        }), null, 1000, 1000);
    }
}
